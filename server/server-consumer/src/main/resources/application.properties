server.port=8083
spring.application.name=Server-Consumer
eureka.client.service-url.defaultZone=http://admin:111@peer1:8080/eureka/,http://admin:111@peer2:8081/eureka/
#指定全局的服务请求连接超时时间为200毫秒
ribbon.ConnectTimeout=200
#平衡算法改为轮询(注释开启的话就是从平衡算法注解切换到轮询随机算法)
#Server-Provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#开启重试机制，即获取服务失败是否从另外一个节点重试，默认值为false
spring.cloud.loadbalancer.retry.enabled=true
#设置处理Server-Provider服务的超时时间
Server-Provider.ribbon.ReadTimeout=1000
#对Server-Provider的所有请求在失败的时候都进行重试
Server-Provider.ribbon.OkToRetryOnAllOperations=true
#切换Server-Provider实例的重试次数
Server-Provider.ribbon.MaxAutoRetriesNextServer=1
#对Server-Provider当前实例的重试次数
#根据如上配置当访问Server-Provider服务实例（比如是8082）遇到故障的时候，Ribbon会再尝试访问一次当前实例（次数由MaxAutoRetries配置），如果不行，就换到8083实例进行访问（更换次数由 MaxAutoRetriesNextServer决定），如果还是不行，那就GG思密达，返回失败。
Server-Provider.ribbon.MaxAutoRetries=1
#上面配置了名称为Server-Provider的服务，有两个节点可供使用（8084和8082）



